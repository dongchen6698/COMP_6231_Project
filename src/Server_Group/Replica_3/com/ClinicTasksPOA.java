package com;


/**
* com/ClinicTasksPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ClinicTasks.idl
* Wednesday, August 3, 2016 7:56:17 PM EDT
*/

public abstract class ClinicTasksPOA extends org.omg.PortableServer.Servant
 implements com.ClinicTasksOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createRecord", new java.lang.Integer (0));
    _methods.put ("getRecordCounts", new java.lang.Integer (1));
    _methods.put ("editRecord", new java.lang.Integer (2));
    _methods.put ("transferRecord", new java.lang.Integer (3));
    _methods.put ("shutdown", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // com/ClinicTasks/createRecord
       {
         String managerId = in.read_string ();
         com.SuperRecord superRecord = com.SuperRecordHelper.read (in);
         String $result = null;
         $result = this.createRecord (managerId, superRecord);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // com/ClinicTasks/getRecordCounts
       {
         String managerId = in.read_string ();
         String recordType = in.read_string ();
         int udpIntrSrvsSenderPrt = in.read_long ();
         int udpIntrSrvsReceiverPrt = in.read_long ();
         String $result = null;
         $result = this.getRecordCounts (managerId, recordType, udpIntrSrvsSenderPrt, udpIntrSrvsReceiverPrt);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // com/ClinicTasks/editRecord
       {
         String managerId = in.read_string ();
         String recordId = in.read_string ();
         String fieldName = in.read_string ();
         String newValue = in.read_string ();
         String $result = null;
         $result = this.editRecord (managerId, recordId, fieldName, newValue);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // com/ClinicTasks/transferRecord
       {
         String managerId = in.read_string ();
         String recordId = in.read_string ();
         String remoteClinicServerName = in.read_string ();
         String $result = null;
         $result = this.transferRecord (managerId, recordId, remoteClinicServerName);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // com/ClinicTasks/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:com/ClinicTasks:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ClinicTasks _this() 
  {
    return ClinicTasksHelper.narrow(
    super._this_object());
  }

  public ClinicTasks _this(org.omg.CORBA.ORB orb) 
  {
    return ClinicTasksHelper.narrow(
    super._this_object(orb));
  }


} // class ClinicTasksPOA
